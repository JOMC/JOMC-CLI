##
##   Copyright (C) 2009 The JOMC Project
##   Copyright (C) 2005 Christian Schulte <schulte2005@users.sourceforge.net>
##   All rights reserved.
##
##   Redistribution and use in source and binary forms, with or without
##   modification, are permitted provided that the following conditions
##   are met:
##
##     o Redistributions of source code must retain the above copyright
##       notice, this list of conditions and the following disclaimer.
##
##     o Redistributions in binary form must reproduce the above copyright
##       notice, this list of conditions and the following disclaimer in
##       the documentation and/or other materials provided with the
##       distribution.
##
##   THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
##   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
##   AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
##   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY DIRECT, INDIRECT,
##   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
##   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
##   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
##   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
##   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
##   THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##
##   $JOMC$
##
## @param tool The tool merging the template.
## @param toolName The name of the tool merging the template.
## @param toolVersion The version of the tool merging the template.
## @param toolUrl The URL to the site of the tool merging the template.
## @param calendar A java.util.Calendar instance.
## @param now The current timestamp formatted using the pattern "yyyy-MM-dd'T'HH:mm:ss.SSSZ".
## @param year The current year formatted using the pattern "yyyy".
## @param month The current month formatted using the pattern "MM".
## @param day The current day formatted using the pattern "dd".
## @param hour The current hour formatted using the pattern "HH".
## @param minute The current minute formatted using the pattern "mm".
## @param second The current second formatted using the pattern "ss".
## @param timezone The current timezone formatted using the pattern "Z".
## @param model The model declaring the modules of the implementation to render.
## @param modules The modules declaring the implementation to render.
## @param implementation The implementation to render.
#set($dependencies = $modules.getDependencies($implementation.getIdentifier()))
#if($dependencies)
#set($options = [])
#foreach($dependency in $dependencies.getDependency())
#if($dependency.getIdentifier() == "JOMC CLI Command Option")#set($ignored = $options.add($dependency))#end
#end
${tool.getIndentation(1)}// <editor-fold defaultstate="collapsed" desc=" Generated Command ">
${tool.getIndentation(1)}/**
${tool.getIndentation(1)} * Gets the options of the command.
${tool.getIndentation(1)} *
${tool.getIndentation(1)} * <p><strong>Options:</strong>
${tool.getIndentation(1)} *   <table border="1" width="100%" cellpadding="3" cellspacing="0">
${tool.getIndentation(1)} *     <tr class="TableSubHeadingColor">
${tool.getIndentation(1)} *       <th align="left" scope="col" nowrap><b>Specification</b></th>
${tool.getIndentation(1)} *       <th align="left" scope="col" nowrap><b>Implementation</b></th>
${tool.getIndentation(1)} *     </tr>
#foreach($option in $options)
${tool.getIndentation(1)} *     <tr class="TableRow">
#set($specification = $modules.getSpecification($option.getIdentifier()))
${tool.getIndentation(1)} *       <td align="left" valign="top" nowrap>$tool.getHtmlString($option.getIdentifier()) {@code ($specification.getClazz())}#if($option.getVersion()) @ $tool.getHtmlString($option.getVersion())#end</td>
${tool.getIndentation(1)} *       <td align="left" valign="top" nowrap>$tool.getHtmlString($option.getImplementationName())</td>
${tool.getIndentation(1)} *     </tr>
#end
${tool.getIndentation(1)} *   </table>
${tool.getIndentation(1)} * </p>
${tool.getIndentation(1)} *
${tool.getIndentation(1)} * @return The options of the command.
${tool.getIndentation(1)} */
${tool.getIndentation(1)}@javax.annotation.Generated( value = "$toolName $toolVersion", comments = "See $toolUrl" )
${tool.getIndentation(1)}public org.apache.commons.cli.Options getOptions()
${tool.getIndentation(1)}{
${tool.getIndentation(2)}final org.apache.commons.cli.Options options = new org.apache.commons.cli.Options();
#foreach($option in $options)
${tool.getIndentation(2)}options.addOption( this.$tool.getJavaGetterMethodName($option)() );
#end
${tool.getIndentation(2)}return options;
${tool.getIndentation(1)}}
${tool.getIndentation(1)}// </editor-fold>
#end